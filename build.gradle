plugins {
    id 'java'

    id 'org.asciidoctor.convert' version '2.4.0'
    id 'org.flywaydb.flyway' version '6.5.5'
    id 'org.springframework.boot' version '3.0.4'

    id 'com.diffplug.spotless' version '6.18.0'

    id 'com.google.cloud.tools.jib' version '3.3.1'

    id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'com.diffplug.spotless'

group = 'com.studio-playground'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

jib {
    from {
        image = "eclipse-temurin:17.0.6_10-jre"
        platforms {
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        image = 'az-backend'
        tags = ('production' == System.getenv("ENV")) ? ["${version}"] : ['latest']
    }
    container {
        ports = ['8080']
        format = 'OCI'
    }
}

flyway {
    url = 'jdbc:mysql://localhost:3306/AZ_DB?useSSL=false&allowPublicKeyRetrieval=true'
    locations = ['filesystem:./src/main/resources/flyway/ddl', 'filesystem:./src/main/resources/flyway/dml/local']
    user = 'root'
    password = 'rootazmysql123'
    schemas = ['AZ_DB']
    sqlMigrationSuffixes = ['.sql']
    outOfOrder = true
    baselineOnMigrate = true
}

spotless {
    java {
        importOrder 'java', 'jakarta', 'javax', 'org', 'com', 'common', ''
        removeUnusedImports()

        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()

        googleJavaFormat().aosp()
    }
    format 'misc', {
        target '**/*.yml', '**/*.gradle', '**/*.md', '**/.gitignore'
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'misc_gradle', {
        target '**/*.gradle'
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
}
